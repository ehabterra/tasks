openapi: 3.0.3
info:
  title: Task Service
  description: Service for manipulate task data
  version: "1.0"
servers:
- url: http://0.0.0.0:8001
  description: Hosts the Task Service.
paths:
  /tasks:
    get:
      tags:
      - tasks
      summary: list tasks
      description: List all stored tasks
      operationId: tasks#list
      parameters:
      - name: view
        in: query
        description: View to render
        allowEmptyValue: true
        schema:
          type: string
          description: View to render
          example: default
          enum:
          - default
          - tiny
        example: tiny
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: 'Response body may alternatively be #/components/schemas/StoredTaskResponseTinyCollection'
                $ref: '#/components/schemas/StoredTaskCollection'
              example:
              - assignee:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                created_date: "1977-08-23T17:31:33Z"
                description: Task description
                due_date: Dignissimos non assumenda tenetur voluptatum id quo.
                id: Dolor eos dolorem numquam odio aspernatur et.
                owner:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                status: Closed
                title: New task title
                updated_date: "1994-11-14T18:35:02Z"
              - assignee:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                created_date: "1977-08-23T17:31:33Z"
                description: Task description
                due_date: Dignissimos non assumenda tenetur voluptatum id quo.
                id: Dolor eos dolorem numquam odio aspernatur et.
                owner:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                status: Closed
                title: New task title
                updated_date: "1994-11-14T18:35:02Z"
    post:
      tags:
      - tasks
      summary: add tasks
      description: Add new task and return ID.
      operationId: tasks#add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequestBody'
            example:
              assignee:
                email: ehabterra@hotmail.com
                firstname: Ehab
                isactive: true
                lastname: Terra
                role: admin
              created_date: "1975-03-22T22:24:18Z"
              description: Task description
              owner:
                email: ehabterra@hotmail.com
                firstname: Ehab
                isactive: true
                lastname: Terra
                role: admin
              status: Open
              title: New task title
              updated_date: "2006-01-23T17:30:28Z"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: Iure sed eligendi sed libero dignissimos eligendi.
              example: Eum magni.
  /tasks/{id}:
    delete:
      tags:
      - tasks
      summary: remove tasks
      description: Remove task from tasks data
      operationId: tasks#remove
      parameters:
      - name: id
        in: path
        description: ID of task to remove
        required: true
        schema:
          type: string
          description: ID of task to remove
          example: Distinctio ut et impedit enim repellat deserunt.
        example: Qui architecto est et dolor.
      responses:
        "204":
          description: ""
          content:
            application/json:
              example: {}
    get:
      tags:
      - tasks
      summary: show tasks
      description: Show task by ID
      operationId: tasks#show
      parameters:
      - name: view
        in: query
        description: View to render
        allowEmptyValue: true
        schema:
          type: string
          description: View to render
          example: default
          enum:
          - default
          - tiny
        example: tiny
      - name: id
        in: path
        description: ID of task to show
        required: true
        schema:
          type: string
          description: ID of task to show
          example: Et voluptates dolor.
        example: Consectetur sit.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: 'Response body may alternatively be #/components/schemas/StoredTaskResponseTiny'
                $ref: '#/components/schemas/StoredTask'
              example:
                assignee:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                created_date: "1983-03-20T16:13:23Z"
                description: Task description
                due_date: Commodi esse possimus minus velit corporis enim.
                id: Sapiente porro est autem incidunt eius dicta.
                owner:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                status: Pending
                title: New task title
                updated_date: "1976-10-01T06:43:23Z"
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                id: Porro beatae et voluptates.
                message: task 1 not found
    put:
      tags:
      - tasks
      summary: update tasks
      description: Update existing task and return ID.
      operationId: tasks#update
      parameters:
      - name: id
        in: path
        description: ID of task to show
        required: true
        schema:
          type: string
          description: ID of task to show
          example: Sed sequi dolorum.
        example: Aliquid consectetur.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestBody'
            example:
              task:
                assignee:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                created_date: "1977-08-23T17:31:33Z"
                description: Task description
                due_date: Dignissimos non assumenda tenetur voluptatum id quo.
                id: Dolor eos dolorem numquam odio aspernatur et.
                owner:
                  email: ehabterra@hotmail.com
                  firstname: Ehab
                  isactive: true
                  lastname: Terra
                  role: admin
                status: Closed
                title: New task title
                updated_date: "1994-11-14T18:35:02Z"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
                example: Accusamus deleniti distinctio nam dicta facilis.
              example: Vero dolorum ratione.
  /tasks/status:
    put:
      tags:
      - tasks
      summary: status tasks
      description: change task status by id
      operationId: tasks#status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusRequestBody'
            example:
              id: Id enim consequatur aut vero.
              status: Closed
      responses:
        "200":
          description: ""
          content:
            application/json:
              example: {}
components:
  schemas:
    AddRequestBody:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/StoredUser'
        created_date:
          type: string
          description: Created date
          example: "1992-10-21T15:42:03Z"
          format: date-time
        description:
          type: string
          description: Description of the task
          example: Task description
          maxLength: 5000
        owner:
          $ref: '#/components/schemas/StoredUser'
        status:
          type: string
          description: Status.
          default: Open
          example: Pending
          enum:
          - Open
          - Closed
          - Pending
        title:
          type: string
          description: Title of the task
          example: New task title
          maxLength: 200
        updated_date:
          type: string
          description: Udated date
          example: "1971-10-27T23:20:04Z"
          format: date-time
      example:
        assignee:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        created_date: "1995-10-15T19:43:56Z"
        description: Task description
        owner:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        status: Pending
        title: New task title
        updated_date: "2009-11-25T15:26:33Z"
      required:
      - title
      - description
      - created_date
      - updated_date
      - status
    NotFound:
      type: object
      properties:
        id:
          type: string
          description: ID of missing task
          example: Unde ut corporis consectetur ut.
        message:
          type: string
          description: Message of error
          example: task 1 not found
      description: Task not found
      example:
        id: Doloribus enim.
        message: task 1 not found
      required:
      - message
      - id
    StatusRequestBody:
      type: object
      properties:
        id:
          type: string
          description: ID of task
          example: Illo unde consequatur.
        status:
          type: string
          description: Status.
          default: Open
          example: Open
          enum:
          - Open
          - Closed
          - Pending
      example:
        id: Sequi placeat facilis sunt.
        status: Pending
      required:
      - id
      - status
    StoredTask:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/StoredUser'
        created_date:
          type: string
          description: Created date
          example: "2000-04-07T03:44:55Z"
          format: date-time
        description:
          type: string
          description: Description of the task
          example: Task description
          maxLength: 5000
        due_date:
          type: string
          example: Occaecati voluptatem laboriosam.
        id:
          type: string
          example: Quis vel iusto.
        owner:
          $ref: '#/components/schemas/StoredUser'
        status:
          type: string
          description: Status.
          default: Open
          example: Open
          enum:
          - Open
          - Closed
          - Pending
        title:
          type: string
          description: Title of the task
          example: New task title
          maxLength: 200
        updated_date:
          type: string
          description: Udated date
          example: "1982-05-29T03:47:53Z"
          format: date-time
      description: A StoredTask describes a task retrieved by the tasks service.
      example:
        assignee:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        created_date: "1982-08-29T01:56:36Z"
        description: Task description
        due_date: Eum aut.
        id: Autem quidem quidem voluptatem architecto.
        owner:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        status: Pending
        title: New task title
        updated_date: "1971-05-15T16:44:12Z"
      required:
      - id
      - title
      - description
      - created_date
      - status
      - owner
      - updated_date
    StoredTaskCollection:
      type: array
      items:
        $ref: '#/components/schemas/StoredTask'
      example:
      - assignee:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        created_date: "1977-08-23T17:31:33Z"
        description: Task description
        due_date: Dignissimos non assumenda tenetur voluptatum id quo.
        id: Dolor eos dolorem numquam odio aspernatur et.
        owner:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        status: Closed
        title: New task title
        updated_date: "1994-11-14T18:35:02Z"
      - assignee:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        created_date: "1977-08-23T17:31:33Z"
        description: Task description
        due_date: Dignissimos non assumenda tenetur voluptatum id quo.
        id: Dolor eos dolorem numquam odio aspernatur et.
        owner:
          email: ehabterra@hotmail.com
          firstname: Ehab
          isactive: true
          lastname: Terra
          role: admin
        status: Closed
        title: New task title
        updated_date: "1994-11-14T18:35:02Z"
    StoredTaskResponseTiny:
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/StoredUser2'
        id:
          type: string
          example: Et quis aut.
        status:
          type: string
          description: Status.
          default: Open
          example: Open
          enum:
          - Open
          - Closed
          - Pending
        title:
          type: string
          description: Title of the task
          example: New task title
          maxLength: 200
      description: A StoredTask describes a task retrieved by the tasks service. (tiny view)
      example:
        assignee:
          email: ehabterra@hotmail.com
          isactive: true
          role: admin
        id: Voluptas temporibus ex tenetur blanditiis aut et.
        status: Open
        title: New task title
      required:
      - id
      - title
      - status
    StoredTaskResponseTinyCollection:
      type: array
      items:
        $ref: '#/components/schemas/StoredTaskResponseTiny'
      description: ListResponseBody is the result type for an array of StoredTaskResponse (tiny view)
      example:
      - assignee:
          email: ehabterra@hotmail.com
          isactive: true
          role: admin
        id: Quis odio consectetur non.
        status: Pending
        title: New task title
      - assignee:
          email: ehabterra@hotmail.com
          isactive: true
          role: admin
        id: Quis odio consectetur non.
        status: Pending
        title: New task title
    StoredUser:
      type: object
      properties:
        email:
          type: string
          description: Email of the user
          example: ehabterra@hotmail.com
          pattern: .+@.+\..{1,6}
        firstname:
          type: string
          description: First Name of the user
          example: Ehab
          maxLength: 100
        isactive:
          type: boolean
          description: Is user active.
          default: true
          example: false
        lastname:
          type: string
          description: Last Name of user
          example: Terra
          maxLength: 100
        role:
          type: string
          description: user role
          example: admin
          pattern: '[a-z]+[a-z0-9]*'
      description: A StoredUser describes a user retrieved by the users service.
      example:
        email: ehabterra@hotmail.com
        firstname: Ehab
        isactive: false
        lastname: Terra
        role: admin
      required:
      - email
      - firstname
      - lastname
      - role
    StoredUser2:
      type: object
      properties:
        email:
          type: string
          description: Email of the user
          example: ehabterra@hotmail.com
          pattern: .+@.+\..{1,6}
        isactive:
          type: boolean
          description: Is user active.
          default: true
          example: false
        role:
          type: string
          description: user role
          example: admin
          pattern: '[a-z]+[a-z0-9]*'
      description: A StoredUser describes a user retrieved by the users service.
      example:
        email: ehabterra@hotmail.com
        isactive: false
        role: admin
      required:
      - email
      - firstname
      - lastname
      - role
    UpdateRequestBody:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/StoredTask'
      example:
        task:
          assignee:
            email: ehabterra@hotmail.com
            firstname: Ehab
            isactive: true
            lastname: Terra
            role: admin
          created_date: "1977-08-23T17:31:33Z"
          description: Task description
          due_date: Dignissimos non assumenda tenetur voluptatum id quo.
          id: Dolor eos dolorem numquam odio aspernatur et.
          owner:
            email: ehabterra@hotmail.com
            firstname: Ehab
            isactive: true
            lastname: Terra
            role: admin
          status: Closed
          title: New task title
          updated_date: "1994-11-14T18:35:02Z"
      required:
      - task
