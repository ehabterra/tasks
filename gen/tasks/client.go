// Code generated by goa v3.2.3, DO NOT EDIT.
//
// tasks client
//
// Command:
// $ goa gen tasks/design

package tasks

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "tasks" service client.
type Client struct {
	ListEndpoint   goa.Endpoint
	ShowEndpoint   goa.Endpoint
	AddEndpoint    goa.Endpoint
	UpdateEndpoint goa.Endpoint
	RemoveEndpoint goa.Endpoint
	StatusEndpoint goa.Endpoint
}

// NewClient initializes a "tasks" service client given the endpoints.
func NewClient(list, show, add, update, remove, status goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:   list,
		ShowEndpoint:   show,
		AddEndpoint:    add,
		UpdateEndpoint: update,
		RemoveEndpoint: remove,
		StatusEndpoint: status,
	}
}

// List calls the "list" endpoint of the "tasks" service.
func (c *Client) List(ctx context.Context, p *ListPayload) (res StoredTaskCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(StoredTaskCollection), nil
}

// Show calls the "show" endpoint of the "tasks" service.
// Show may return the following errors:
//	- "not_found" (type *NotFound): Task not found
//	- error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *StoredTask, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredTask), nil
}

// Add calls the "add" endpoint of the "tasks" service.
func (c *Client) Add(ctx context.Context, p *Task) (res string, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Update calls the "update" endpoint of the "tasks" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Remove calls the "remove" endpoint of the "tasks" service.
// Remove may return the following errors:
//	- "not_found" (type *NotFound): ID not found
//	- error: internal error
func (c *Client) Remove(ctx context.Context, p *RemovePayload) (err error) {
	_, err = c.RemoveEndpoint(ctx, p)
	return
}

// Status calls the "status" endpoint of the "tasks" service.
func (c *Client) Status(ctx context.Context, p *StatusPayload) (err error) {
	_, err = c.StatusEndpoint(ctx, p)
	return
}
