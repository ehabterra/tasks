// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"
	taskspb "tasks/gen/grpc/tasks/pb"

	mock "github.com/stretchr/testify/mock"
)

// TasksServer is an autogenerated mock type for the TasksServer type
type TasksServer struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) Add(_a0 context.Context, _a1 *taskspb.AddRequest) (*taskspb.AddResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.AddResponse
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.AddRequest) *taskspb.AddResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.AddResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.AddRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) List(_a0 context.Context, _a1 *taskspb.ListRequest) (*taskspb.StoredTaskCollection, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.StoredTaskCollection
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.ListRequest) *taskspb.StoredTaskCollection); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.StoredTaskCollection)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.ListRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Remove provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) Remove(_a0 context.Context, _a1 *taskspb.RemoveRequest) (*taskspb.RemoveResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.RemoveResponse
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.RemoveRequest) *taskspb.RemoveResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.RemoveResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.RemoveRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Show provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) Show(_a0 context.Context, _a1 *taskspb.ShowRequest) (*taskspb.ShowResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.ShowResponse
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.ShowRequest) *taskspb.ShowResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.ShowResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.ShowRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Status provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) Status(_a0 context.Context, _a1 *taskspb.StatusRequest) (*taskspb.StatusResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.StatusResponse
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.StatusRequest) *taskspb.StatusResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.StatusResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.StatusRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0, _a1
func (_m *TasksServer) Update(_a0 context.Context, _a1 *taskspb.UpdateRequest) (*taskspb.UpdateResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *taskspb.UpdateResponse
	if rf, ok := ret.Get(0).(func(context.Context, *taskspb.UpdateRequest) *taskspb.UpdateResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*taskspb.UpdateResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *taskspb.UpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
